const stylisticJs = require('@stylistic/eslint-plugin-js');

module.exports = [
    {
        plugins: {
            '@stylistic/js': stylisticJs,
        },
        rules: {
            '@stylistic/js/function-call-argument-newline': 'off',
            '@stylistic/js/function-call-spacing': ['error', 'never'],
            '@stylistic/js/function-paren-newline': ['error', 'multiline'],
            '@stylistic/js/generator-star-spacing': ['error', 'before'],
            '@stylistic/js/array-bracket-newline': 'off',
            '@stylistic/js/array-bracket-spacing': ['error', 'never'],
            '@stylistic/js/array-element-newline': ['error', 'consistent'],
            '@stylistic/js/arrow-parens': ['error', 'as-needed'],
            '@stylistic/js/arrow-spacing': 'error',
            '@stylistic/js/block-spacing': ['error', 'always'],
            '@stylistic/js/brace-style': ['error', '1tbs', {
                allowSingleLine: true,
            }],
            '@stylistic/js/comma-dangle': ['error', 'always-multiline'],
            '@stylistic/js/comma-spacing': ['error', {
                before: false,
                after: true,
            }],
            '@stylistic/js/comma-style': ['error', 'last'],
            '@stylistic/js/computed-property-spacing': ['error', 'never'],
            '@stylistic/js/func-call-spacing': ['error', 'never'],
            '@stylistic/js/implicit-arrow-linebreak': ['error', 'beside'],
            '@stylistic/js/indent': ['warn', 2],
            '@stylistic/js/jsx-quotes': ['error', 'prefer-double'],
            '@stylistic/js/key-spacing': ['error', {
                beforeColon: false,
                afterColon: true,
                mode: 'strict',
            }],
            '@stylistic/js/keyword-spacing': ['error', {
                before: true,
                after: true,
                overrides: {
                    return: { after: true },
                    throw: { after: true },
                    case: { after: true },
                },
            }],
            '@stylistic/js/line-comment-position': 'off',
            '@stylistic/js/linebreak-style': ['error', 'unix'],
            '@stylistic/js/lines-around-comment': 'off',
            '@stylistic/js/lines-between-class-members': ['error', 'always', {
                exceptAfterSingleLine: true,
            }],
            '@stylistic/js/max-statements-per-line': 'off',
            '@stylistic/js/multiline-comment-style': 'off',
            '@stylistic/js/multiline-ternary': 'off',
            '@stylistic/js/new-parens': 'error',
            '@stylistic/js/newline-per-chained-call': 'off',
            '@stylistic/js/dot-location': ['error', 'property'],
            '@stylistic/js/eol-last': ['error', 'always'],
            '@stylistic/js/max-len': ['off', 120],
            '@stylistic/js/no-confusing-arrow': 'error',
            '@stylistic/js/no-extra-parens': 'off',
            '@stylistic/js/no-extra-semi': 'error',
            '@stylistic/js/no-floating-decimal': 'error',
            '@stylistic/js/no-mixed-operators': ['error', {
                groups: [
                    ['%', '**'],
                    ['%', '+'],
                    ['%', '-'],
                    ['%', '*'],
                    ['%', '/'],
                    ['**', '+'],
                    ['**', '-'],
                    ['**', '*'],
                    ['**', '/'],
                    ['&', '|', '^', '~', '<<', '>>', '>>>'],
                    ['==', '!=', '===', '!==', '>', '>=', '<', '<='],
                    ['&&', '||'],
                    ['in', 'instanceof'],
                ],
                allowSamePrecedence: false,
            }],
            '@stylistic/js/no-mixed-spaces-and-tabs': 'error',
            '@stylistic/js/no-multi-spaces': ['error', {
                exceptions: {
                    VariableDeclarator: true,
                    Property: true,
                },
            }],
            '@stylistic/js/no-multiple-empty-lines': 'error',
            '@stylistic/js/no-tabs': 'error',
            '@stylistic/js/no-trailing-spaces': ['error', {
                skipBlankLines: true,
                ignoreComments: false,
            }],
            '@stylistic/js/no-whitespace-before-property': 'error',
            '@stylistic/js/nonblock-statement-body-position': ['error', 'beside'],
            '@stylistic/js/object-curly-newline': ['error', {
                multiline: true,
                consistent: true,
            }],
            '@stylistic/js/object-curly-spacing': ['error', 'always'],
            '@stylistic/js/object-property-newline': ['error', {
                allowAllPropertiesOnSameLine: true,
            }],
            '@stylistic/js/one-var-declaration-per-line': 'error',
            '@stylistic/js/operator-linebreak': 'error',
            '@stylistic/js/padded-blocks': ['error', 'never'],
            '@stylistic/js/padding-line-between-statements': 'error',
            '@stylistic/js/quote-props': ['error', 'consistent'],
            '@stylistic/js/quotes': ['error', 'single', { avoidEscape: true }],
            '@stylistic/js/rest-spread-spacing': 'error',
            '@stylistic/js/semi': 'error',
            '@stylistic/js/semi-spacing': 'error',
            '@stylistic/js/semi-style': 'error',
            '@stylistic/js/space-before-blocks': 'error',
            '@stylistic/js/space-before-function-paren': 'off',
            '@stylistic/js/space-in-parens': 'error',
            '@stylistic/js/space-infix-ops': 'error',
            '@stylistic/js/space-unary-ops': 'error',
            '@stylistic/js/spaced-comment': 'error',
            '@stylistic/js/switch-colon-spacing': 'error',
            '@stylistic/js/template-curly-spacing': 'error',
            '@stylistic/js/template-tag-spacing': 'error',
            '@stylistic/js/wrap-iife': ['error', 'inside'],
            '@stylistic/js/wrap-regex': 'error',
            '@stylistic/js/yield-star-spacing': ['error', 'before'],
        }
    },
    {
        rules: {
            'accessor-pairs': 'error',
            'array-callback-return': 'error',
            'arrow-body-style': ['error', 'as-needed'],
            'block-scoped-var': 'error',
            'camelcase': 'error',
            'capitalized-comments': 'off',
            'class-methods-use-this': 'warn',
            'complexity': 'error',
            'consistent-return': 'error',
            'consistent-this': 'error',
            'constructor-super': 'error',
            'curly': 'off',
            'default-case': ['error', {
                commentPattern: '^skip\\sdefault',
            }],
            'default-case-last': 'error',
            'default-param-last': ['error'],
            'dot-notation': 'error',
            'eqeqeq': ['error', 'always'],
            'for-direction': 'error',
            'func-name-matching': ['error', 'always'],
            'func-names': 'error',
            'func-style': 'off',
            'getter-return': 'error',
            'guard-for-in': 'error',
            'grouped-accessor-pairs': ['error', 'setBeforeGet'],
            'id-denylist': 'off',
            'id-length': 'off',
            'id-match': 'off',
            'init-declarations': 'off',
            'logical-assignment-operators': 'warn',
            'max-classes-per-file': 'off',
            'max-depth': 'off',
            'max-lines': 'off',
            'max-lines-per-function': 'off',
            'max-nested-callbacks': 'error',
            'max-params': 'off',
            'max-statements': 'off',
            'new-cap': 'error',
            'no-alert': 'error',
            'no-array-constructor': 'error',
            'no-async-promise-executor': 'error',
            'no-await-in-loop': 'error',
            'no-bitwise': 'off',
            'no-caller': 'error',
            'no-case-declarations': 'off',
            'no-class-assign': 'error',
            'no-compare-neg-zero': 'error',
            'no-cond-assign': ['error', 'always'],
            'no-console': 'off',
            'no-const-assign': 'error',
            'no-constant-binary-expression': 'error',
            'no-constant-condition': 'error',
            'no-constructor-return': 'error',
            'no-continue': 'error',
            'no-control-regex': 'error',
            'no-debugger': 'error',
            'no-delete-var': 'error',
            'no-div-regex': 'error',
            'no-dupe-args': 'error',
            'no-dupe-class-members': 'error',
            'no-dupe-else-if': 'error',
            'no-dupe-keys': 'error',
            'no-duplicate-case': 'error',
            'no-duplicate-imports': 'error',
            'no-else-return': ['error', {
                allowElseIf: false,
            }],
            'no-empty': 'error',
            'no-empty-character-class': 'error',
            'no-empty-function': 'off',
            'no-empty-pattern': 'error',
            'no-empty-static-block': 'off',
            'no-eq-null': 'error',
            'no-eval': 'error',
            'no-ex-assign': 'error',
            'no-extend-native': 'error',
            'no-extra-bind': 'error',
            'no-extra-boolean-cast': 'error',
            'no-extra-label': 'error',
            'no-fallthrough': ['error', {
                commentPattern: 'falls?',
            }],
            'no-func-assign': 'error',
            'no-global-assign': 'error',
            'no-implicit-coercion': ['error', {
                boolean: false,
                number: true,
                string: true,
                allow: ['!!'],
            }],
            'no-implicit-globals': 'error',
            'no-implied-eval': 'error',
            'no-import-assign': 'error',
            'no-inline-comments': 'off',
            'no-inner-declarations': 'error',
            'no-invalid-regexp': 'error',
            'no-invalid-this': 'error',
            'no-irregular-whitespace': 'error',
            'no-iterator': 'error',
            'no-label-var': 'error',
            'no-labels': 'error',
            'no-lone-blocks': 'error',
            'no-lonely-if': 'error',
            'no-loop-func': 'error',
            'no-loss-of-precision': 'error',
            'no-magic-numbers': 'off',
            'no-misleading-character-class': 'error',
            'no-multi-assign': 'error',
            'no-multi-str': 'error',
            'no-negated-condition': 'off',
            'no-nested-ternary': 'error',
            'no-new': 'error',
            'no-new-func': 'error',
            'no-new-native-nonconstructor': 'error',
            'no-new-wrappers': 'error',
            'no-nonoctal-decimal-escape': 'error',
            'no-obj-calls': 'error',
            'no-object-constructor': 'error',
            'no-octal': 'error',
            'no-octal-escape': 'error',
            'no-param-reassign': 'error',
            'no-plusplus': 'off',
            'no-promise-executor-return': 'error',
            'no-proto': 'error',
            'no-prototype-builtins': 'error',
            'no-redeclare': 'error',
            'no-regex-spaces': 'warn',
            'no-restricted-exports': 'off',
            'no-restricted-globals': 'off',
            'no-restricted-imports': 'off',
            'no-restricted-properties': 'error',
            'no-restricted-syntax': 'off',
            'no-return-assign': ['error', 'always'],
            'no-script-url': 'error',
            'no-self-assign': ['warn', {
                props: true,
            }],
            'no-self-compare': 'warn',
            'no-setter-return': 'warn',
            'no-sequences': 'error',
            'no-shadow': 'error',
            'no-shadow-restricted-names': 'error',
            'no-sparse-arrays': 'error',
            'no-template-curly-in-string': 'error',
            'no-ternary': 'off',
            'no-this-before-super': 'error',
            'no-throw-literal': 'error',
            'no-undef': 'error',
            'no-undef-init': 'error',
            'no-undefined': 'off',
            'no-underscore-dangle': 'off',
            'no-unexpected-multiline': 'error',
            'no-unmodified-loop-condition': 'warn',
            'no-unneeded-ternary': 'error',
            'no-unreachable': 'error',
            'no-unreachable-loop': 'error',
            'no-unsafe-finally': 'error',
            'no-unsafe-negation': 'error',
            'no-unused-private-class-members': 'warn',
            'no-unsafe-optional-chaining': 'error',
            'no-unused-expressions': ['error', {
                allowShortCircuit: false,
                allowTernary: false,
                allowTaggedTemplates: false,
            }],
            'no-unused-labels': 'error',
            'no-unused-vars': ['error', {
                vars: 'all',
                args: 'after-used',
                ignoreRestSiblings: true,
            }],
            'no-use-before-define': ['error', {
                functions: true,
                classes: true,
                variables: true,
            }],
            'no-useless-assignment': 'warn',
            'no-useless-backreference': 'off',
            'no-useless-call': 'error',
            'no-useless-catch': 'error',
            'no-useless-computed-key': 'error',
            'no-useless-concat': 'error',
            'no-useless-constructor': 'error',
            'no-useless-escape': 'error',
            'no-useless-rename': ['error', {
                ignoreDestructuring: false,
                ignoreImport: false,
                ignoreExport: false,
            }],
            'no-useless-return': 'error',
            'no-var': 'error',
            'no-void': 'error',
            'no-warning-comments': ['off', {
                terms: ['todo', 'fixme', 'xxx'],
                location: 'start',
            }],
            'no-with': 'error',
            'prefer-arrow-callback': 'error',
            'prefer-const': 'error',
            'prefer-destructuring': ['error', {
                'VariableDeclarator': {
                    'array': false,
                    'object': true,
                }
            }],
            'prefer-exponentiation-operator': 'off',
            'prefer-named-capture-group': 'error',
            'prefer-numeric-literals': 'error',
            'prefer-object-has-own': 'error',
            'prefer-object-spread': 'error',
            'prefer-promise-reject-errors': ['error', {
                allowEmptyReject: true,
            }],
            'prefer-rest-params': 'error',
            'prefer-regex-literals': 'off',
            'prefer-spread': 'error',
            'prefer-template': 'error',
            'radix': 'error',
            'require-atomic-updates': 'error',
            'require-await': 'off',
            'require-unicode-regexp': 'off',
            'require-yield': 'error',
            'object-shorthand': 'error',
            'one-var': 'off',
            'operator-assignment': ['error', 'always'],
            'sort-imports': 'off',
            'sort-keys': 'off',
            'sort-vars': 'error',
            'strict': 'off',
            'symbol-description': 'error',
            'unicode-bom': 'error',
            'use-isnan': 'error',
            'valid-typeof': 'error',
            'vars-on-top': 'error',
            'yoda': 'error',
        },
    }
];
